<?php
/**
 * @author Martin Gamboa Vazquez
 * @version 1.0.0
 * @created 2022-05-14
 * @final En proceso
 *
 */
namespace gamboamartin\nomina\controllers;

use gamboamartin\errores\errores;
use gamboamartin\system\system;
use gamboamartin\template\html;
use html\nom_percepcion_html;
use links\secciones\link_nom_percepcion;
use models\nom_percepcion;
use PDO;
use stdClass;

class controlador_nom_percepcion extends system {

    public function __construct(PDO $link, html $html = new \gamboamartin\template_1\html(),
                                stdClass $paths_conf = new stdClass()){
        $modelo = new nom_percepcion(link: $link);
        $html_ = new nom_percepcion_html(html: $html);
        $obj_link = new link_nom_percepcion(link: $link,registro_id:$this->registro_id);
        $this->rows_lista[] = 'aplica_subsidio';
        parent::__construct(html:$html_, link: $link,modelo:  $modelo, obj_link: $obj_link, paths_conf: $paths_conf);

        $this->titulo_lista = 'Percepcion';
        $this->acciones->aplica_subsidio = new stdClass();
        $this->acciones->aplica_subsidio->style = '';
        $this->acciones->aplica_subsidio->style_status = true;
    }

    public function alta(bool $header, bool $ws = false): array|string
    {
        $r_alta =  parent::alta(header: false, ws: false); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar template',data:  $r_alta, header: $header,ws:$ws);
        }

        $keys_selects = array();
        $keys_selects['cat_sat_tipo_percepcion'] = new stdClass();
        $keys_selects['cat_sat_tipo_percepcion']->label = 'Tipo Percepcion';

        $inputs = (new nom_percepcion_html(html: $this->html_base))->genera_inputs_alta(controler: $this,
            keys_selects: $keys_selects, link: $this->link);
        if(errores::$error){
            $error = $this->errores->error(mensaje: 'Error al generar inputs',data:  $inputs);
            print_r($error);
            die('Error');
        }
        return $r_alta;
    }


    public function modifica(bool $header, bool $ws = false, string $breadcrumbs = '', bool $aplica_form = true,
                             bool $muestra_btn = true): array|string
    {
        $base = $this->base();
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al maquetar datos',data:  $base,
                header: $header,ws:$ws);
        }

        return $base->template;
    }

    private function base(stdClass $params = new stdClass()): array|stdClass
    {
        $r_modifica =  parent::modifica(header: false,aplica_form:  false); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al generar template',data:  $r_modifica);
        }

        $inputs = (new nom_percepcion_html(html: $this->html_base))->inputs_nom_percepcion (
            controlador:$this, params: $params);
        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al inicializar inputs',data:  $inputs);
        }

        $data = new stdClass();
        $data->template = $r_modifica;
        $data->inputs = $inputs;

        return $data;
    }

    public function cambiar_estado_subsidio(bool $header, bool $ws): array|stdClass
    {
        $modelo = new nom_percepcion(link: $this->link);

        $r_nom_percepcion = $modelo->registro_estado_subsidio();
        if (errores::$error) {
            return $this->errores->error(mensaje: 'Error al obtener percepcion',data:  $r_nom_percepcion);
        }

        $id_nom_percepcion = $modelo->id_registro_estado_subsidio($r_nom_percepcion);
        if (errores::$error) {
            return $this->errores->error(mensaje: 'Error al obtener el id de percepcion',data:  $id_nom_percepcion);
        }

        if ($id_nom_percepcion !== -1) {
            $this->link->beginTransaction();
            $upd = $this->modelo->status('aplica_subsidio', $id_nom_percepcion);
            if(errores::$error){
                $this->link->rollBack();
                return $this->retorno_error(mensaje: 'Error al modificar registro', data: $upd,header:  $header, ws: $ws);
            }
            $this->link->commit();
        }

        $this->link->beginTransaction();
        $upd = $this->modelo->status('aplica_subsidio', $this->registro_id);
        if(errores::$error){
            $this->link->rollBack();
            return $this->retorno_error(mensaje: 'Error al modificar registro', data: $upd,header:  $header, ws: $ws);
        }
        $this->link->commit();

        if ($id_nom_percepcion !== $this->registro_id) {
            $_SESSION['exito'][]['mensaje'] = 'Se ajusto el estatus de manera el registro con el id '.$this->registro_id;
        }

        $this->header_out(result: $upd, header: $header,ws:  $ws);
        return $upd;
    }

}
